<?php
/**
 * @file
 * Code for the GSB Feature Program Finder Display feature.
 */

include_once 'gsb_feature_program_finder_display.features.inc';
/**
 * Implements hook_ctools_plugin_directory().
 */
function gsb_feature_program_finder_display_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools') {
    return "plugins/$plugin_type";
  }
}

function gsb_feature_program_finder_display_theme($existing, $type , $theme, $path) {
  return array(
    'program_isotope_item' => array(
      'template' => 'templates/program-isotope-item',
      'file' => 'theme.inc',
    ),
    'program_isotope_degree_item' => array(
      'template' => 'templates/program-isotope-degree-item',
      'file' => 'theme.inc',
    ),
    'program_isotope_item_wrapper' => array(
      'template' => 'templates/program-isotope-item-wrapper',
      'file' => 'theme.inc',
    ),
    'faculty_isotope_item' => array(
      'template' => 'templates/faculty-isotope-item',
      'file' => 'theme.inc',
    ),
    'faculty_isotope_item_wrapper' => array(
      'template' => 'templates/faculty-isotope-item-wrapper',
      'file' => 'theme.inc',
    ),
  );
}
/**
 * Implements hook_menu().
 */
function gsb_feature_program_finder_display_menu() {
  $items = array();
  $items['admin/config/gsb/program-finder'] = array(
    'title' => 'Program Finder',
    'description' => 'Config Program Finder Image CTAs',
    'access arguments' => array('administer program finder image ctas'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gsb_feature_program_finder_display_config_main_image_ctas'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'gsb_feature_program_finder_display.admin.inc',
  );
  $items['admin/config/gsb/program-finder/main'] = array(
    'title' => 'Main Program Finder',
    'access arguments' => array('administer program finder image ctas'),
    'weight' => -10,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'gsb_feature_program_finder_display.admin.inc',
  );
  $items['admin/config/gsb/program-finder/ee'] = array(
    'title' => 'Exec Education Program Finder',
    'description' => 'Config Exec Education Image CTAs',
    'access arguments' => array('administer program finder image ctas'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gsb_feature_program_finder_display_config_ee_image_ctas'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'gsb_feature_program_finder_display.admin.inc',
  );
  $items['program-search/%'] = array(
    'title' => 'Search',
    'page callback' => 'gsb_feature_program_finder_display_search',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['faculty-search/%'] = array(
    'title' => 'Search',
    'page callback' => 'gsb_feature_program_finder_display_faculty_search',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['keyword_autocomplete'] = array(
    'page callback' => 'gsb_feature_program_finder_display_keyword_autocomplete',
   // 'page arguments' => array(1),
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function gsb_feature_program_finder_display_permission() {
  return array(
    'administer program finder image ctas' =>  array(
      'title' => t('Administer Program Finder Image CTAs'),
      'description' => t('Configure Program Finder Image CTAs settings.'),
    ),
  );
}

function gsb_feature_program_finder_display_search($search = '') {
  $terms = explode(' ', $search);

  $select = db_select('field_data_field_search_field', 'sf');
  // Select these specific fields for the output.
  $select->addField('sf', 'entity_id');

  $select->condition('sf.bundle', 'program_instance');

  foreach ($terms as $key => $term) {
    $select->condition('sf.field_search_field_value', '% ' . $term . ' %', 'LIKE');
  }
  $entries = $select->execute()->fetchAll(PDO::FETCH_ASSOC);
  $output = array();
  foreach ($entries as $entry) {
    $output[] = $entry['entity_id'];
  }
  drupal_json_output($output);
  drupal_exit();
}

function gsb_feature_program_finder_display_views_query_alter(&$view, &$query) {
  if ($view->name == 'ee_program_finder' && $view->current_display == 'compare') {
    //limit nids to three
    if (sizeof($view->query->where[0]['conditions'][0]['value'][':node_nid'])  > 3){
      foreach ($view->query->where[0]['conditions'][0]['value'][':node_nid'] as $key => $value){
        if ($key > 2) {
          unset($view->query->where[0]['conditions'][0]['value'][':node_nid'][$key]);
        }
      }
    }
  }
}

function gsb_feature_program_finder_display_views_post_render(&$view, &$output, &$cache) {
  if ($view->name == 'ee_program_finder' && $view->current_display == 'compare') {
    drupal_add_js(drupal_get_path('module', 'gsb_feature_program_finder_display') . '/js/gsb_program_compare.js');
  }
}

/**
 * Search function for isotope filter - path: faculty-search/%
 */
function gsb_feature_program_finder_display_faculty_search($search = '') {
  $terms = explode(' ', $search);
  // Search faculty by name
  $select1 = db_select('field_data_field_first_name', 'fn');
  // Select these specific fields for the output.
  $select1->addField('fn', 'entity_id');
  $select1->condition('fn.bundle', 'faculty');

  $select2 = db_select('field_data_field_last_name', 'ln');
  // Select these specific fields for the output.
  $select2->addField('ln', 'entity_id');
  $select2->condition('ln.bundle', 'faculty');

  foreach ($terms as $key => $term) {
    $select1->condition('fn.field_first_name_value', '%' . $term . '%', 'LIKE');
    $select2->condition('ln.field_last_name_value', '%' . $term . '%', 'LIKE');
  }
  $select1->union($select2, 'UNION ALL');
  $entries = $select1->execute()->fetchAll(PDO::FETCH_ASSOC);
  $output = array();
  foreach ($entries as $entry) {
    $output[] = $entry['entity_id'];
  }

  // Search faculty by keyword
  $results = _gsb_feature_program_finder_display_faculty_search_keyword($terms);
  foreach ($results as $entry) {
    $output[] = $entry['field_person_fac_single_ref_target_id'];
  }
  drupal_json_output($output);
  drupal_exit();
}

/**
 * Search function for faculty by term (keyword)
 * @todo: optimize the query
 */
function _gsb_feature_program_finder_display_faculty_search_keyword($terms = '') {
  $results = db_query("SELECT pfsr.field_person_fac_single_ref_target_id
      FROM field_data_field_person_fac_single_ref pfsr
      INNER JOIN field_data_field_faculty_directors ffd ON pfsr.entity_id = ffd.field_faculty_directors_value
      INNER JOIN field_data_field_program fp ON fp.entity_id = ffd.entity_id
      INNER JOIN field_data_field_tag ft ON fp.field_program_target_id = ft.entity_id
      INNER JOIN taxonomy_term_data ttd ON ttd.tid = ft.field_tag_tid
      WHERE ffd.bundle = :bundle AND  ttd.name = :term
      UNION ALL
      SELECT pfsr.field_person_fac_single_ref_target_id
      FROM field_data_field_person_fac_single_ref pfsr
      INNER JOIN field_data_field_faculty_1 f1 ON pfsr.entity_id = f1.field_faculty_1_value
      INNER JOIN field_data_field_program fp ON fp.entity_id = f1.entity_id
      INNER JOIN field_data_field_tag ft ON fp.field_program_target_id = ft.entity_id
      INNER JOIN taxonomy_term_data ttd ON ttd.tid = ft.field_tag_tid
      WHERE f1.bundle = :bundle AND  ttd.name = :term
      UNION ALL
      SELECT pfsr.field_person_fac_single_ref_target_id
      FROM field_data_field_person_fac_single_ref pfsr
      INNER JOIN field_data_field_faculty_2 f2 ON pfsr.entity_id = f2.field_faculty_2_value
      INNER JOIN field_data_field_program fp ON fp.entity_id = f2.entity_id
      INNER JOIN field_data_field_tag ft ON fp.field_program_target_id = ft.entity_id
      INNER JOIN taxonomy_term_data ttd ON ttd.tid = ft.field_tag_tid
      WHERE f2.bundle = :bundle AND  ttd.name = :term",
      array(':term' => $terms, ':bundle' => 'program_instance'));
  return $results->fetchAll(PDO::FETCH_ASSOC);
}

/**
 * callback function for autocomplete
 */
function gsb_feature_program_finder_display_keyword_autocomplete($string) {
  $string = array(':s' => $string . '%');

  // Get matching tag terms
  $tag_query = db_select('taxonomy_term_data', 'ttd');
  $tag_query->fields('ttd', array('tid', 'name'));
  $tag_query->leftJoin('taxonomy_vocabulary', 'tv', 'tv.vid = ttd.vid');
  $tag_query->condition('tv.machine_name', 'tag');
  $tag_query->condition('ttd.name', $string , 'LIKE');
  $tag_query->orderBy('ttd.weight', 'ASC');
  $tag_results = $tag_query->execute();

  $items = array();

  foreach ($tag_results as $tag) {
    $items[$tag->name] = $tag->name;
  }

  print drupal_json_encode($items);
}
